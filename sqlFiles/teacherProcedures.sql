CREATE OR REPLACE PACKAGE types
AS
    TYPE ref_cursor IS REF CURSOR;
END;
/
-- Get all the teachers
CREATE OR REPLACE FUNCTION SELECT_TEACHERS
RETURN types.ref_cursor
AS
    teachers_cursor types.ref_cursor;
BEGIN
    OPEN teachers_cursor FOR
        SELECT p.PEOPLE_ID, p.LAST_NAME, p.FIRST_NAME, p.PATHER_NAME
        FROM PEOPLE p
        WHERE p.PEOPLE_TYPE = 'T';
    RETURN teachers_cursor;
END;
/
-- Get the teacher using id
CREATE OR REPLACE FUNCTION SELECT_TEACHER (
    TEACHER_ID INTEGER
)
RETURN types.ref_cursor
AS
    teachers_cursor types.ref_cursor;
BEGIN
    OPEN teachers_cursor FOR
        SELECT p.PEOPLE_ID, p.LAST_NAME, p.FIRST_NAME, p.PATHER_NAME
        FROM PEOPLE p
        WHERE p.PEOPLE_ID = TEACHER_ID;
    RETURN teachers_cursor;
END;
/
-- Create a new teacher
CREATE OR REPLACE PROCEDURE INSERT_TEACHER (
    LAST_NAME_PARAMETER VARCHAR,
    FIRST_NAME_PARAMETER VARCHAR,   
    PATHER_NAME_PARAMETER VARCHAR
)
IS
BEGIN
    INSERT INTO PEOPLE
    (FIRST_NAME, LAST_NAME, PATHER_NAME, PEOPLE_TYPE)
    VALUES
    (FIRST_NAME_PARAMETER, LAST_NAME_PARAMETER, PATHER_NAME_PARAMETER, 'T');
END;
/
-- Update the teacher using id
CREATE OR REPLACE PROCEDURE UPDATE_TEACHER (
    TEACHER_ID_PARAMETER INTEGER,
    LAST_NAME_PARAMETER VARCHAR,
    FIRST_NAME_PARAMETER VARCHAR,  
    PATHER_NAME_PARAMETER VARCHAR
)
IS
BEGIN
    UPDATE PEOPLE p
    SET p.FIRST_NAME = FIRST_NAME_PARAMETER,
        p.LAST_NAME = LAST_NAME_PARAMETER,
        p.PATHER_NAME = PATHER_NAME_PARAMETER
    WHERE p.PEOPLE_ID = TEACHER_ID_PARAMETER;
END;
/
-- Delete the teacher using id
CREATE OR REPLACE PROCEDURE DELETE_TEACHER (
    TEACHER_ID_PARAMETER INTEGER
)
IS
BEGIN
    DELETE
    FROM PEOPLE p
    WHERE p.PEOPLE_ID = TEACHER_ID_PARAMETER;
END;
/